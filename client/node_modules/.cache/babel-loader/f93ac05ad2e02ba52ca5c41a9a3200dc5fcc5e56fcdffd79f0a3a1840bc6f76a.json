{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Documents\\\\New folder (3)\\\\FYP\\\\client\\\\src\\\\components\\\\home\\\\comments\\\\CommentDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CommentCard from './CommentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentDisplay = _ref => {\n  _s();\n  let {\n    comment,\n    post,\n    replyCm\n  } = _ref;\n  const [showRep, setShowRep] = useState([]);\n  const [next, setNext] = useState(1);\n  useEffect(() => {\n    setShowRep(replyCm.slice(replyCm.length - next));\n  }, [replyCm, next]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment_display\",\n    children: /*#__PURE__*/_jsxDEV(CommentCard, {\n      post: post,\n      comment: comment,\n      commentId: comment._id,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ps-4\",\n        children: [showRep.map((item, index) => item.reply && /*#__PURE__*/_jsxDEV(CommentCard, {\n          comment: item,\n          post: post,\n          commentId: comment._id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)), replyCm.length - next > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setNext(next + 10),\n          style: {\n            cursor: \"pointer\",\n            color: \"crimson\"\n          },\n          children: \"Load more...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this) : replyCm.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setNext(1),\n          style: {\n            cursor: \"pointer\",\n            color: \"crimson\"\n          },\n          children: \"Hide...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentDisplay, \"pCRqSGYr+4wyy3EVCj3zsE6QgHA=\");\n_c = CommentDisplay;\nexport default CommentDisplay;\nvar _c;\n$RefreshReg$(_c, \"CommentDisplay\");","map":{"version":3,"names":["React","useEffect","useState","CommentCard","jsxDEV","_jsxDEV","CommentDisplay","_ref","_s","comment","post","replyCm","showRep","setShowRep","next","setNext","slice","length","className","children","commentId","_id","map","item","index","reply","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","color","_c","$RefreshReg$"],"sources":["C:/Users/a/Documents/New folder (3)/FYP/client/src/components/home/comments/CommentDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport CommentCard from './CommentCard'\n\nconst CommentDisplay = ({ comment, post, replyCm }) => {\n  const [showRep, setShowRep] = useState([]);\n  const [next, setNext] = useState(1);\n\n  useEffect(() => {\n    setShowRep(replyCm.slice(replyCm.length - next));\n  }, [replyCm, next]);\n\n  return (\n    <div className=\"comment_display\">\n      <CommentCard post={post} comment={comment} commentId={comment._id}>\n        <div className=\"ps-4\">\n          {showRep.map(\n            (item, index) =>\n              item.reply && (\n                <CommentCard\n                  comment={item}\n                  key={index}\n                  post={post}\n                  commentId={comment._id}\n                />\n              )\n          )}\n\n          {replyCm.length - next > 0 ? (\n            <div\n              onClick={() => setNext(next + 10)}\n              style={{ cursor: \"pointer\", color: \"crimson\" }}\n            >\n              Load more...\n            </div>\n          ) : (\n            replyCm.length > 1 && (\n              <div\n                onClick={() => setNext(1)}\n                style={{ cursor: \"pointer\", color: \"crimson\" }}\n              >\n                Hide...\n              </div>\n            )\n          )}\n        </div>\n      </CommentCard>\n    </div>\n  );\n};\n\nexport default CommentDisplay\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAChD,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACdY,UAAU,CAACF,OAAO,CAACK,KAAK,CAACL,OAAO,CAACM,MAAM,GAAGH,IAAI,CAAC,CAAC;EAClD,CAAC,EAAE,CAACH,OAAO,EAAEG,IAAI,CAAC,CAAC;EAEnB,oBACET,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9Bd,OAAA,CAACF,WAAW;MAACO,IAAI,EAAEA,IAAK;MAACD,OAAO,EAAEA,OAAQ;MAACW,SAAS,EAAEX,OAAO,CAACY,GAAI;MAAAF,QAAA,eAChEd,OAAA;QAAKa,SAAS,EAAC,MAAM;QAAAC,QAAA,GAClBP,OAAO,CAACU,GAAG,CACV,CAACC,IAAI,EAAEC,KAAK,KACVD,IAAI,CAACE,KAAK,iBACRpB,OAAA,CAACF,WAAW;UACVM,OAAO,EAAEc,IAAK;UAEdb,IAAI,EAAEA,IAAK;UACXU,SAAS,EAAEX,OAAO,CAACY;QAAI,GAFlBG,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAIb,CACJ,EAEAlB,OAAO,CAACM,MAAM,GAAGH,IAAI,GAAG,CAAC,gBACxBT,OAAA;UACEyB,OAAO,EAAEA,CAAA,KAAMf,OAAO,CAACD,IAAI,GAAG,EAAE,CAAE;UAClCiB,KAAK,EAAE;YAAEC,MAAM,EAAE,SAAS;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAd,QAAA,EAChD;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,GAENlB,OAAO,CAACM,MAAM,GAAG,CAAC,iBAChBZ,OAAA;UACEyB,OAAO,EAAEA,CAAA,KAAMf,OAAO,CAAC,CAAC,CAAE;UAC1BgB,KAAK,EAAE;YAAEC,MAAM,EAAE,SAAS;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAd,QAAA,EAChD;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACM;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACV;AAEV,CAAC;AAACrB,EAAA,CA7CIF,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AA+CpB,eAAeA,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}