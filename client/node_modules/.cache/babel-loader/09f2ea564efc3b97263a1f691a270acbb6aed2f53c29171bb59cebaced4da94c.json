{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StrictEventEmitter = void 0;\nvar Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nvar StrictEventEmitter = /*#__PURE__*/function (_Emitter) {\n  _inherits(StrictEventEmitter, _Emitter);\n  var _super = _createSuper(StrictEventEmitter);\n  function StrictEventEmitter() {\n    _classCallCheck(this, StrictEventEmitter);\n    return _super.apply(this, arguments);\n  }\n  _createClass(StrictEventEmitter, [{\n    key: \"on\",\n    value:\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    function on(ev, listener) {\n      _get(_getPrototypeOf(StrictEventEmitter.prototype), \"on\", this).call(this, ev, listener);\n      return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n  }, {\n    key: \"once\",\n    value: function once(ev, listener) {\n      _get(_getPrototypeOf(StrictEventEmitter.prototype), \"once\", this).call(this, ev, listener);\n      return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n  }, {\n    key: \"emit\",\n    value: function emit(ev) {\n      var _get2;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      (_get2 = _get(_getPrototypeOf(StrictEventEmitter.prototype), \"emit\", this)).call.apply(_get2, [this, ev].concat(args));\n      return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n  }, {\n    key: \"emitReserved\",\n    value: function emitReserved(ev) {\n      var _get3;\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n      (_get3 = _get(_getPrototypeOf(StrictEventEmitter.prototype), \"emit\", this)).call.apply(_get3, [this, ev].concat(args));\n      return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n  }, {\n    key: \"listeners\",\n    value: function listeners(event) {\n      return _get(_getPrototypeOf(StrictEventEmitter.prototype), \"listeners\", this).call(this, event);\n    }\n  }]);\n  return StrictEventEmitter;\n}(Emitter);\nexports.StrictEventEmitter = StrictEventEmitter;","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_get","_getPrototypeOf","_inherits","_createSuper","Object","defineProperty","exports","value","StrictEventEmitter","Emitter","_Emitter","_super","apply","arguments","key","on","ev","listener","prototype","call","once","emit","_get2","_len","length","args","Array","_key","concat","emitReserved","_get3","_len2","_key2","listeners","event"],"sources":["C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/socket.io-client/build/typed-events.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}