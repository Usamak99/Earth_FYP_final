{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _createForOfIteratorHelper from\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";export var checkImage=function checkImage(file){var err=\"\";if(!file){return err=\"File does not exist.\";}//?1 mb\nif(file.size>1024*1024){return err=\"File size must be less than 1 Mb.\";}if(file.type!=='image/jpeg'&&file.type!=='image/png'){return err=\"Image must be jpeg or png.\";}return err;};export var imageUpload=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(images){var imgArr,_iterator,_step,item,formData,res,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:imgArr=[];_iterator=_createForOfIteratorHelper(images);_context.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context.next=19;break;}item=_step.value;formData=new FormData();if(item.camera){formData.append(\"file\",item.camera);}else{formData.append(\"file\",item);}formData.append(\"upload_preset\",\"ADD VALUE HERE\");formData.append(\"cloud_name\",\"ADD VALUE HERE\");_context.next=12;return fetch(\"ADD CLOUDINARY IMAGE UPLOAD LINK HERE\",{method:\"POST\",body:formData});case 12:res=_context.sent;_context.next=15;return res.json();case 15:data=_context.sent;imgArr.push({public_id:data.public_id,url:data.secure_url});case 17:_context.next=4;break;case 19:_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](2);_iterator.e(_context.t0);case 24:_context.prev=24;_iterator.f();return _context.finish(24);case 27:return _context.abrupt(\"return\",imgArr);case 28:case\"end\":return _context.stop();}},_callee,null,[[2,21,24,27]]);}));return function imageUpload(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["checkImage","file","err","size","type","imageUpload","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","images","imgArr","_iterator","_step","item","formData","res","data","wrap","_callee$","_context","prev","next","_createForOfIteratorHelper","s","n","done","value","FormData","camera","append","fetch","method","body","sent","json","push","public_id","url","secure_url","t0","e","f","finish","abrupt","stop","_x","apply","arguments"],"sources":["C:/Users/a/Documents/New folder (3)/mern-social-media-master/client/src/utils/imageUpload.js"],"sourcesContent":["export const checkImage = (file) => {\n    let err = \"\";\n    if(!file){\n        return err = \"File does not exist.\";\n    }\n//?1 mb\n    if(file.size > 1024 * 1024){\n         return (err = \"File size must be less than 1 Mb.\");\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\n      return (err = \"Image must be jpeg or png.\");\n    }\n\n    return err;\n}\n\nexport const imageUpload = async (images) => {\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData();\n\n        if(item.camera){\n            formData.append(\"file\", item.camera);\n        }else{\n            formData.append(\"file\", item);  \n        }\n\n        \n        formData.append(\"upload_preset\", \"ADD VALUE HERE\");\n        formData.append(\"cloud_name\", \"ADD VALUE HERE\");\n\n        const res = await fetch(\"ADD CLOUDINARY IMAGE UPLOAD LINK HERE\", {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json();\n        imgArr.push({ public_id: data.public_id, url: data.secure_url });\n        \n      \n    }\n    return imgArr;\n}"],"mappings":"mfAAA,MAAO,IAAM,CAAAA,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,IAAI,CAAK,CAChC,GAAI,CAAAC,GAAG,CAAG,EAAE,CACZ,GAAG,CAACD,IAAI,CAAC,CACL,MAAO,CAAAC,GAAG,CAAG,sBAAsB,CACvC,CACJ;AACI,GAAGD,IAAI,CAACE,IAAI,CAAG,IAAI,CAAG,IAAI,CAAC,CACtB,MAAQ,CAAAD,GAAG,CAAG,mCAAmC,CACtD,CAEA,GAAID,IAAI,CAACG,IAAI,GAAK,YAAY,EAAIH,IAAI,CAACG,IAAI,GAAK,WAAW,CAAE,CAC3D,MAAQ,CAAAF,GAAG,CAAG,4BAA4B,CAC5C,CAEA,MAAO,CAAAA,GAAG,CACd,CAAC,CAED,MAAO,IAAM,CAAAG,WAAW,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,MAAM,MAAAC,MAAA,CAAAC,SAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,QAAA,CAAAC,GAAA,CAAAC,IAAA,QAAAV,mBAAA,GAAAW,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAChCX,MAAM,CAAG,EAAE,CAAAC,SAAA,CAAAW,0BAAA,CACGb,MAAM,EAAAU,QAAA,CAAAC,IAAA,GAAAT,SAAA,CAAAY,CAAA,cAAAX,KAAA,CAAAD,SAAA,CAAAa,CAAA,IAAAC,IAAA,EAAAN,QAAA,CAAAE,IAAA,WAAdR,IAAI,CAAAD,KAAA,CAAAc,KAAA,CACJZ,QAAQ,CAAG,GAAI,CAAAa,QAAQ,EAAE,CAE/B,GAAGd,IAAI,CAACe,MAAM,CAAC,CACXd,QAAQ,CAACe,MAAM,CAAC,MAAM,CAAEhB,IAAI,CAACe,MAAM,CAAC,CACxC,CAAC,IAAI,CACDd,QAAQ,CAACe,MAAM,CAAC,MAAM,CAAEhB,IAAI,CAAC,CACjC,CAGAC,QAAQ,CAACe,MAAM,CAAC,eAAe,CAAE,gBAAgB,CAAC,CAClDf,QAAQ,CAACe,MAAM,CAAC,YAAY,CAAE,gBAAgB,CAAC,CAACV,QAAA,CAAAE,IAAA,UAE9B,CAAAS,KAAK,CAAC,uCAAuC,CAAE,CAC7DC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAElB,QACV,CAAC,CAAC,SAHIC,GAAG,CAAAI,QAAA,CAAAc,IAAA,CAAAd,QAAA,CAAAE,IAAA,UAKU,CAAAN,GAAG,CAACmB,IAAI,EAAE,SAAvBlB,IAAI,CAAAG,QAAA,CAAAc,IAAA,CACVvB,MAAM,CAACyB,IAAI,CAAC,CAAEC,SAAS,CAAEpB,IAAI,CAACoB,SAAS,CAAEC,GAAG,CAAErB,IAAI,CAACsB,UAAW,CAAC,CAAC,CAAC,QAAAnB,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAoB,EAAA,CAAApB,QAAA,aAAAR,SAAA,CAAA6B,CAAA,CAAArB,QAAA,CAAAoB,EAAA,UAAApB,QAAA,CAAAC,IAAA,IAAAT,SAAA,CAAA8B,CAAA,UAAAtB,QAAA,CAAAuB,MAAA,oBAAAvB,QAAA,CAAAwB,MAAA,UAI9DjC,MAAM,2BAAAS,QAAA,CAAAyB,IAAA,MAAApC,OAAA,uBAChB,kBA1BY,CAAAL,WAAWA,CAAA0C,EAAA,SAAAzC,IAAA,CAAA0C,KAAA,MAAAC,SAAA,OA0BvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}